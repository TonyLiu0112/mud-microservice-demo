spring:
  application:
    name: mud-microservice-web-manager
    index: 1
  cloud:
    config:
      discovery:
        enabled: true
        service-id: mud-microservice-configcenter
      name: web-manager
eureka:
  client:
    service-url:
      defaultZone: http://admin:111111@peer1:8761/eureka/,http://admin:222222@peer2:8762/eureka/,http://admin:333333@peer3:8763/eureka/
# sso服务
security:
  basic:
    enabled: false
  oauth2:
    client:
      client-id: mud
      client-secret: mud
      access-token-uri: http://localhost:9999/oauth/token
      user-authorization-uri: http://localhost:9999/oauth/authorize
      scope: read, write
    resource:
      token-info-uri: http://localhost:9999/oauth/check_token
logging:
  level.org.springframework.security: debug
#security:
#  basic:
#    enabled: false
#  oauth2:
#    client:
#      client-id: mud
#      client-secret: mud
#      access-token-uri: http://localhost:${server.port}/proxy/oauth/token
#      user-authorization-uri: http://localhost:${server.port}/proxy/oauth/authorize
#      scope: read, write
#    resource:
#      token-info-uri: http://localhost:${server.port}/proxy/oauth/check_token
#  ignored: /proxy/oauth/token, /proxy/oauth/authorize, /proxy/oauth/check_token
#zuul:
#  routes:
#    auth-server:
#      add-proxy-headers: true
#      path: /proxy/**
#      serviceId: mud-microservice-security
#mud-microservice-security:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
#logging:
#  level.org.springframework.security: debug